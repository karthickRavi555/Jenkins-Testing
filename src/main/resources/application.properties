# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database w/createDatabaseIfNotExist=true
spring.datasource.url = jdbc:mysql://localhost:3306/sensiple_driver_route_management?createDatabaseIfNotExist=true
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# Database - data initialization
spring.jpa.generate-ddl = true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Transactions
spring.jpa.open-in-view = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#web server
server.port=9009
spring.application.name=Account Management
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.preferIpAddress=true

security.basic.enabled=false

#To maintain oauth filter ordering
security.oauth2.resource.filter-order=3

# User info
security.oauth2.resource.userInfoUri=http://localhost:9191/authenticate

# ===============================
# LOG4j-LOGBACK
# ===============================
logging.level.root=INFO
logging.level.com.sensiple.drm.account.service=DEBUG
logging.level.org.hibernate=ERROR
spring.profiles.active=dev


# ===============================
# Redis Config
# ===============================
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379 


# ===============================
# MULTIPART (MultipartProperties) Config
# ===============================
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

